# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
        
      # run tests!
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            make test
      # run lints!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint
      - delploy:
          name: Push application Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo "Deployiong to Google Cloud..."
              dir ./hit-or-onbase.json
              gcloud auth activate-service-account -- key-file ./hit-or-onbase.json
              gcloud --quiet config set project hit-or-onbase-234765633993
              gcloud --quiet config set compute/zone us-central
              gcloud -q app deploy ./final_project/app.yaml -- project=hit-or-onbase-234765633993
            fi
deploy:
  docker:
    -image: google/cloud-sdk
    steps:
    - run: |
        echo "Deploying to Google Cloud..."
        gcloud --quiet config set project hit-or-onbase-234765633993
        gcloud --quiet config set compute/zone us-central
        gcloud auth activate-service-account --key-file=hit-or-onbase-key.json
        gcloud -q app deploy final_project/* --project=msds-434-project-234765633993
workflows:
  version:2
  build
    jobs:
      - build
